{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mindt\\\\Downloads\\\\hospital-management-master\\\\hospital-management-master\\\\front-end\\\\src\\\\appointment\\\\AddAppointment.js\";\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read } from \"../appointment/AppointmentFunction\";\n\nclass AddAppointment extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault();\n      const {\n        date,\n        time,\n        patientName,\n        doctorId\n      } = this.state;\n      const appointment = {\n        doctor: doctorId,\n        date: date,\n        time: time,\n        patientName: patientName\n      };\n      console.log(appointment);\n      this.makeAppointment(appointment).then(data => {\n        if (data.error) this.setState({\n          error: data.error\n        });else this.setState({\n          doctor: \"\",\n          date: \"\",\n          time: \"\",\n          patientName: \"\",\n          open: true\n        });\n      });\n    };\n\n    this.makeAppointment = appointment => {\n      return fetch(`http://localhost:8080/appointment/create/${this.state.doctorId}`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${isAuthenticated().token}`\n        },\n        body: JSON.stringify(appointment)\n      }).then(response => {\n        return response.json();\n      }).catch(err => console.log(err));\n    };\n\n    this.init = doctorId => {\n      const token = isAuthenticated().token;\n      read(doctorId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            RedirectToSignin: true\n          });\n        } else this.setState({\n          doctorId: doctorId\n        });\n      });\n    };\n\n    this.state = {\n      date: \"\",\n      time: \"\",\n      patientName: \"\",\n      error: \"\",\n      doctorId: \"\",\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    const doctorId = this.props.match.params.doctorId;\n    this.init(doctorId);\n  }\n\n  render() {\n    const {\n      date,\n      time,\n      patientName,\n      error,\n      open\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Create appointment\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, error), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Date: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      onChange: this.handleChange(\"date\"),\n      value: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"time: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"time\",\n      className: \"form-control\",\n      onChange: this.handleChange(\"time\"),\n      value: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"patient name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onChange: this.handleChange(\"patientName\"),\n      value: patientName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Create appointment\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-info\",\n      style: {\n        display: open ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Appointment has been confirmed\")));\n  }\n\n}\n\nexport default AddAppointment;","map":{"version":3,"sources":["C:/Users/mindt/Downloads/hospital-management-master/hospital-management-master/front-end/src/appointment/AddAppointment.js"],"names":["React","Component","isAuthenticated","read","AddAppointment","constructor","handleChange","name","event","setState","target","value","error","clickSubmit","preventDefault","date","time","patientName","doctorId","state","appointment","doctor","console","log","makeAppointment","then","data","open","fetch","method","headers","Accept","Authorization","token","body","JSON","stringify","response","json","catch","err","init","RedirectToSignin","componentDidMount","props","match","params","render","display"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\"\r\nimport { isAuthenticated } from \"../auth\"\r\nimport {read} from \"../appointment/AppointmentFunction\"\r\n\r\nclass AddAppointment extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = { \r\n            date:\"\",\r\n            time:\"\", \r\n            patientName:\"\",\r\n            error:\"\",\r\n            doctorId :\"\",\r\n            open:false\r\n        }\r\n    }\r\n    \r\n    handleChange = name=>event=>{\r\n        this.setState({[name]:event.target.value});\r\n        this.setState({error:\"\"});\r\n      }\r\n    \r\n    clickSubmit = event =>{\r\n        event.preventDefault()\r\n        const {date,time,patientName,doctorId} = this.state\r\n        const appointment ={\r\n            doctor:doctorId,\r\n            date:date,\r\n            time:time,\r\n            patientName:patientName\r\n        }\r\n        console.log(appointment)\r\n        this.makeAppointment(appointment)\r\n        .then(data=>{\r\n            if(data.error)this.setState({error:data.error})\r\n            else this.setState({\r\n                doctor:\"\",\r\n                date:\"\",\r\n                time:\"\",\r\n                patientName:\"\",\r\n                open:true\r\n            })\r\n        })\r\n\r\n    }\r\n    makeAppointment = appointment =>{\r\n        return fetch(`http://localhost:8080/appointment/create/${this.state.doctorId}`,{\r\n          method:\"POST\",\r\n          headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\":\"application/json\" ,\r\n            Authorization:`Bearer ${isAuthenticated().token}` \r\n          },\r\n          body: JSON.stringify(appointment)\r\n        })\r\n        .then(response=>{\r\n          return response.json()\r\n        })\r\n        .catch(err=> console.log(err))  \r\n      }\r\n\r\n    init = doctorId=>{\r\n        const token = isAuthenticated().token;\r\n        read(doctorId,token).then(data=>{\r\n            if(data.error){this.setState({RedirectToSignin: true})}\r\n            else this.setState({\r\n                doctorId: doctorId\r\n            })\r\n        })\r\n    } \r\n\r\n    componentDidMount(){\r\n        const doctorId = this.props.match.params.doctorId\r\n        this.init(doctorId)\r\n    }\r\n\r\n    render(){\r\n        const {date,time,patientName,error,open} = this.state\r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"mt-5 mb-5\">Create appointment</h2>\r\n                <div className=\"form-group\"> \r\n                <form>\r\n                <div className=\"alert alert-danger\" style={{display: error?\"\":\"none\"}}>\r\n                    {error}\r\n                </div>\r\n                <label className=\"text-muted\">Date: </label>\r\n                <input type=\"date\" className=\"form-control\" onChange={this.handleChange(\"date\")} value={date}></input>\r\n                <label className=\"text-muted\">time: </label>\r\n                <input type=\"time\" className=\"form-control\"onChange={this.handleChange(\"time\")} value={time}></input>\r\n                <label className=\"text-muted\">patient name: </label>\r\n                <input type=\"text\" className=\"form-control\" onChange={this.handleChange(\"patientName\")}value={patientName}></input>\r\n                </form>\r\n                    <button onClick={this.clickSubmit} className=\"btn btn-raised btn-primary\">Create appointment</button>\r\n                    <div className=\"alert alert-info\" style={{display: open?\"\":\"none\"}}>\r\n                                 Appointment has been confirmed\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddAppointment;"]},"metadata":{},"sourceType":"module"}